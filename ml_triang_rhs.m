function dxdt = ml_triang_rhs(t,x,theta,gamma_,Dr,Dd,Ddr,K,M)
% note: this is a parallelogram, not a square with zigzag vertical edges

CM = theta(:,:,1);
gCa = theta(:,:,2);
gK = theta(:,:,3);
gL = theta(:,:,4);
VCa = theta(:,:,5);
VK = theta(:,:,6);
VL = theta(:,:,7);
V1 = theta(:,:,8);
V2 = theta(:,:,9);
V3 = theta(:,:,10);
V4 = theta(:,:,11);
phi = theta(:,:,12);
I = theta(:,:,13);

V = reshape(x(1:K*M),K,M);
N = reshape(x(K*M+1:end),K,M);

Minf = (1+tanh((V-V1)./V2))/2;
Ninf = (1+tanh((V-V3)./V4))/2;
tauN = 1./phi./cosh((V-V3)./V4/2);

% upper left corner
L(1,1) = Dd(1,1)*V(2,1) ...
    + Dr(1,1)*V(1,2) ...
    + Ddr(1,1)*V(2,2) ...
    - (Dd(1,1)+Dr(1,1)+Ddr(1,1))*V(1,1);
% top edge
for j = 2:M-1
    L(1,j) = Dd(1,j)*V(2,j) ...
        + Dr(1,j)*V(1,j+1) ...
        + Dr(1,j-1)*V(1,j-1) ...
        + Ddr(1,j)*V(2,j+1) ...
        - (Dd(1,j)+Dr(1,j)+Dr(1,j-1)+Ddr(1,j))*V(1,j);
end
% upper right corner
L(1,M) = Dd(1,M)*V(2,M) ...
    + Dr(1,M-1)*V(1,M-1) ...
    - (Dd(1,M)+Dr(1,M-1))*V(1,M);
for i = 2:K-1
    % left edge
    L(i,1) = Dd(i,1)*V(i+1,1) ...
        + Dd(i-1,1)*V(i-1,1) ...
        + Dr(i,1)*V(i,2) ...
        + Ddr(i,1)*V(i+1,2) ...
        - (Dd(i,1)+Dd(i-1,1)+Dr(i,1)+Ddr(i,1))*V(i,1);
    % bulk
    for j = 2:M-1
        L(i,j) = Dd(i,j)*V(i+1,j) ...
            + Dd(i-1,j)*V(i-1,j) ...
            + Dr(i,j)*V(i,j+1) ...
            + Dr(i,j-1)*V(i,j-1) ...
            + Ddr(i,j)*V(i+1,j+1) ...
            + Ddr(i-1,j-1)*V(i-1,j-1) ...
            - (Dd(i,j)+Dd(i-1,j)+Dr(i,j)...
              +Dr(i,j-1)+Ddr(i,j)+Ddr(i-1,j-1))*V(i,j);
    end
    % right edge
    L(i,M) = Dd(i,M)*V(i+1,M) ...
        + Dd(i-1,M)*V(i-1,M) ...
        + Dr(i,M-1)*V(i,M-1) ...
        + Ddr(i-1,M-1)*V(i-1,M-1) ...
        - (Dd(i,M)+Dd(i-1,M)+Dr(i,M-1)+Ddr(i-1,M-1))*V(i,M);
end
% lower left corner
L(K,1) = Dd(K-1,1)*V(K-1,1) ...
    + Dr(K,1)*V(K,2) ...
    - (Dd(K-1,1)+Dr(K,1))*V(K,1);
% bottom edge
for j = 2:M-1
    L(K,j) = Dd(K-1,j)*V(K-1,j) ...
        + Dr(K,j)*V(K,j+1) ...
        + Dr(K,j-1)*V(K,j-1) ...
        + Ddr(K-1,j-1)*V(K-1,j-1) ...
        - (Dd(K-1,j)+Dr(K,j)+Dr(K,j-1)+Ddr(K-1,j-1))*V(K,j);
end
% lower right corner
L(K,M) = Dd(K-1,M)*V(K-1,M) ...
    + Dr(K,M-1)*V(K,M-1) ...
    + Ddr(K-1,M-1)*V(K-1,M-1) ...
    - (Dd(K-1,M)+Dr(K,M-1)+Ddr(K-1,M-1))*V(K,M);

dVdt = (-gL.*(V-VL)-gCa.*Minf.*(V-VCa)-gK.*N.*(V-VK)+I)./CM + gamma_*L;
dNdt = (Ninf-N)./tauN;

dxdt = [dVdt(:); dNdt(:)];